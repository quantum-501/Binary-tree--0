Sql执行原理---------解析器-->--优化器-->--执行器-----关系模型和集合论为基础（关注我们获取什么）

Oracle执行原理                                                        
                    Sql语句                                      ｜语法检查sql语句；语义访问对象是否存在；是否具备访问该数据的权限
                      ｜                                         ｜是否具备访问该数据的权限 解析
语法检查---语义检查---权限检查---共享池检查--->硬解析>---优化器         ｜共享池：是内存池，主要用于缓存sql语句和执行计划来判断软硬，首先对语句进行hash运算如果库中有就执行
                                ｜软解析             ｜           ｜如果没有，就生成解析树(优化器)然后执行计划
                               执行--------<---------              
                  
MySQL执行原理  

典型Client/Server架构🈶由三层构成                               有sql就直输出    对Sql语法,语义分析        判断是否具备权限
连接层  ：客户端和服务器端建立连接，客户端发送Sql至服务器端                ｜               ｜                      ｜
Sql层  ：对Sql语句进行查询处理也与数据库文件的存储方式------>>---------缓存查询----->-----解析器--->---优化器--->---执行器-->--输出结果
存储引擎层（磁盘,内存,网络）：与数据库文件打交道，负责数据的存储和读取                                    |
                                                                                     确定Sql语句的执行路径（如根据全表检索或根据索引来检索）


数据库             
｜                   
增删create/drop    
｜                   
DDL(database definition language)定义数据表和数据库结构
|
数据表------增(CREATE TABLE[table_name]字段名 数据类型,....)改(ALTER TABLE)
｜
数据表约束-----主键(唯一标识)外键(表之间引用完整性)唯一性(字段在表中唯一的)not null约束()check约束(字段取值有效范围)DEfault(字段默认值)
｜         
｜
数据表设计原则--->简单复用>--表个数,字段数越少越好-->--主外键越多越好-->--联合主键字段越少越好
     
  |           
  ｜view视图---一张虚拟表帮助封装底层和数据表的接口-------如何使用----1.封装sql语句,提升复用率2.完成复杂链接3.对数据格式化4.计算字段
--｜------
  ｜----------聚集函数HAVING(对分组进行条件过滤),GROUP BY(对数据分组),NULL(分组)
  ｜----------字符串函数CONCAT(连接字符串),LENGTH(字符长度),CHAR_LENGTH(计算字段长度),LOWER(转小写),UPPER(转大写),REPLACE(替换),SUBSTRING(截取)
  ｜----------日期函数CURRENT_DATE(系统当前函数),CURRENT_TIME(系统当前时间无具体),CURRENT_TIMESTAMP(具体日期+时间),EXTRACT(提取年月日)
  ｜----------算术函数ABS(绝对值),MOD(取余),ROUND(小数1位),MAX(),MIN(),SUM(),AVG()转换函数cast(数据类型转换),coalesce(返回第一个非空值)
  ｜
SQL函数(转换处理数据)
  &
检索筛选效率 ------------------------------------------------------------WHERE(针对数据过滤)
｜                                                              ｜       ｜-----通配符(尽量少用)----%匹配任意次数,_匹配单个字符,LIKE通配符
SELECT > FROM > WHERE > GROUP BY >  HAVING > ON检索顺序          ｜        ｜----比较运算---=,不等于!=<>,小于<,小于等于<=!>,大于>,大于等于>=!<,不小于!<,BETWEEN,NULL
Select检索-------可选一到多列,用as别名，常数查询,DISTCT删除重复行      ｜      ｜----逻辑运算---AND,OR,NOT,IN  
  ｜                                                            ｜
  ｜排序检索----ORDER BY后+多个别名，注明顺序规则，并放在select最后一句  -----------子查询
                                                                             ｜---------关联查询-子查询与主查询有关执行多次/非关联查询-子查询与猪查询无关执行一次
                                                                             ｜---关键字--IN判断在集合中/ANY和some与比较使用并子查询返回任何值做比较
                                                                                    ｜---ALL与比较使用并子查询返回所有值做比较

(大型数据处理)
Sql----view视图---一张虚拟表帮助封装底层和数据表的接口-------如何使用----1.封装sql语句,提升复用率2.完成复杂链接3.对数据格式化4.计算字段
         ｜          CREATE ALTER DROP VIEw还可嵌套 alter
         ｜
       存储过程-----代码封装多次调用操作底层数据库--由sql控制流语句和语句构成语句集合---创建CREATE PROCEDURE,删除DROP PROCEDURE,更新ALITER PROCEDUR,结束符DELIMITER
         ｜                                                                  |IN传入参数并修改值,不返回;OUT计算结果放到参数并返回;INOUT既然传入修改放入值中也返回 
         ｜
       事务处理-----多个数据库读或写成一个基本单元---不可分割(原子性)操作后一种状态为另一状态(一致性)每事务独立互不干扰(独立性)提交后修改的数据是持久的(持久性)
         ｜                   ｜
         ｜               事务并发带来问题----不可重复读(数据读取两次结果不同),脏读(读到了其他数据没读到的),幻读(事务A读了N数据而事务B增加条件读取A有M数据，而A再读时有N+M数据)
         ｜                   ｜-------四种隔离级别--读未交,读已提交,可重复读,可串行读(让事务按顺序读)
         ｜
         ｜游标-----解决存储在数据库的数据行指针----
  ｜                                                            ｜--
