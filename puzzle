125. Valid Palindrome
var isPalindrome = function(s) {
    
    let arr = s.toLowerCase().match(/[a-z]/g);
    if(s.length < 1) return;
    
    let left = 0; 
    let right = arr.length-1; //TypeError: Cannot read properties of null (reading 'length') ??????
    while(left<right){
       if(arr[left]===arr[right]){
           left++;
           right--;
       }else{
           return false;
       }
    }
    return true;
    
};

verify common prefix within a set of strngs

function string(string){
   var arr = string.split(' ');
   var map = new Map();
   var arr1 = [];
   for(let i=0; i< arr.length-1; i++){

       const subArr = arr.slice(i,i+1).join();
       const subArr1 = arr.slice(i+1,i+2).join();

       for(let j=0; j<= subArr.length-1;j++){
           if(subArr[j] === subArr1[j]){ 
               if(!map[subArr[j]]) map[subArr[j]] = 1;
               else map[subArr[j]]++;
           }
       }
    }
    map.forEach((value,key) => {
        `map[${key}] = ${value}`? arr1.push(`map[${key}]`) : null;
    });
    console.log(arr1);
}
string("flower flow flight flu");
